<?xml version="1.0" encoding="UTF-8"?>

<TestSuite>
<TestCase id="1">
<Direction>Launch -> 4G Radio Network -> 4G Ranking -> HandOver Execution By Terminal</Direction>
<Url><![CDATA[NETWORK/LTE_HANDOVER_FAILURE_RANKING_ANALYSIS/TAC_EXEC?time={time}&display=grid&tzOffset=%2B0530&maxRows=50]]></Url>
<JSONVariables>1:rank,2:categoryId,3:terminalMake,4:terminalModel,5:TAC,6:failures</JSONVariables>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select count (*) as 'sqlFailures' from EVENT_E_LTE_HFA_ERR_RAW where CATEGORY_ID_2 = {categoryId} and TAC = {TAC} and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')]]></SqlTest>
<Validate>failures = sqlFailures</Validate>
<SqlTest><![CDATA[ select case when(rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' , case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then  isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel' from( select TAC from dc.EVENT_E_LTE_HFA_ERR_RAW where CATEGORY_ID_2 ={categoryId} and TAC = {TAC} and DATETIME_ID >= '2015-04-02 13:19' and DATETIME_ID < '2015-04-02 13:49' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC]]></SqlTest>
<Validate>terminalMake = sqlMake</Validate>
<Validate>terminalModel = sqlModel</Validate>
</RepeatValidation>
<Validate>sort{failures} = desc</Validate>
<Validate><![CDATA[ rank < 50 ]]></Validate>
<RepeatDrillDown instruction="all">2</RepeatDrillDown>
<PassToDrillDown id="2">TAC</PassToDrillDown>
</TestCase>

<TestCase id="2">
<Precondition>1.TAC > 0</Precondition>
<Direction>Drill On TAC</Direction>
<Url><![CDATA[TERMINAL/LTE_HFA_EVENT_SUMMARY/TAC?time={time}&type=TAC&tac={1.TAC}&display=grid&tzOffset=%2B0530&maxRows=500]]></Url>
<JSONVariables>1:categoryId,2:TAC,3:terminalMake,4:terminalModel,5:handOver,6:failures,7:impactdSubs</JSONVariables>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select count (*) as 'sqlFailures' from EVENT_E_LTE_HFA_ERR_RAW where TAC= {TAC} and CATEGORY_ID_2 = {categoryId} and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')]]></SqlTest>
<Validate>failures = sqlFailures</Validate>
<SqlTest><![CDATA[select count (distinct imsi) as 'sqlimpactdSubs', case when(rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' , case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel' from( select IMSI,TAC from dc.EVENT_E_LTE_HFA_ERR_RAW where CATEGORY_ID_2 ={categoryId} and TAC = {1.TAC} and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC GROUP BY DIM_E_SGEH_TAC.VENDOR_NAME, DIM_E_SGEH_TAC.MARKETING_NAME, rawview.TAC]]></SqlTest>
<Validate>impactdSubs = sqlimpactdSubs</Validate>
<Validate>terminalMake = sqlMake</Validate>
<Validate>terminalModel = sqlModel</Validate>
</RepeatValidation>
<Validate>sort{failures} = desc</Validate>
<RepeatDrillDown instruction="all">3</RepeatDrillDown>
<PassToDrillDown id="3">TAC,categoryId</PassToDrillDown>
</TestCase>


<TestCase id="3">
<Direction>Drill On HandOver stage</Direction>
<Url><![CDATA[TERMINAL/LTE_HFA_EVENT_SUMMARY/CATEGORISED_TERMINAL?time={time}&display=grid&tzOffset=%2B0530&maxRows=500&CATEGORY_ID_2={2.categoryId}&tac={2.TAC}]]></Url>
<JSONVariables>1:TAC,2:terminalMake,3:terminalModel,4:eventType,5:eventId,6:failures,7:impactdSubs</JSONVariables>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select count (*) as 'sqlFailures' from dc.EVENT_E_LTE_HFA_ERR_RAW where TAC= {TAC} and CATEGORY_ID_2 = {2.categoryId} and EVENT_ID={eventId} and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')]]></SqlTest>
<Validate>failures = sqlFailures</Validate>
<SqlTest><![CDATA[select count (distinct imsi) as 'sqlimpactdSubs',case when(rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' , case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel' from( select IMSI,TAC from dc.EVENT_E_LTE_HFA_ERR_RAW where CATEGORY_ID_2 ={2.categoryId} and TAC = {TAC} and EVENT_ID={eventId} and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC GROUP BY DIM_E_SGEH_TAC.VENDOR_NAME, DIM_E_SGEH_TAC.MARKETING_NAME, rawview.TAC]]></SqlTest>
<Validate>impactdSubs = sqlimpactdSubs</Validate>
<Validate>terminalMake = sqlMake</Validate>
<Validate>terminalModel = sqlModel</Validate>
</RepeatValidation>
<Validate>sort{failures} = desc</Validate>
<RepeatDrillDown instruction="all">4</RepeatDrillDown>
<PassToDrillDown id="4">TAC,eventId,failures</PassToDrillDown>
</TestCase>

<TestCase id="4">
<Precondition>3.failures > 0</Precondition>
<Direction>Drill On Failures</Direction>
<Url><![CDATA[TERMINAL/LTE_HFA_DETAILED_EVENT_ANALYSIS/TERMINAL?time={time}&display=grid&tzOffset=%2B0530&maxRows=500&tac={3.TAC}&eventID={3.eventId}]]></Url>
<JSONVariables>1:hierId,2:hier321id,3:THIERID,4:THIID,5:eventTime,7:IMSI,8:TAC,9:terminalMake,10:terminalModel,11:eventId,12:eventType</JSONVariables>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select isnull(CAST(rawview.imsi as varchar),' ') as 'sqlIMSI', case when(rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' , case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown') WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel' from( select IMSI,TAC from dc.EVENT_E_LTE_HFA_ERR_RAW as raw where raw.TAC = {TAC} and raw.EVENT_ID = {eventId} and imsi={IMSI} and event_time = '{eventTime}' and DATETIME_ID >= '2015-02-02 09:01' and DATETIME_ID < '2015-02-02 09:31' and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC]]></SqlTest>
<Validate>IMSI = sqlIMSI</Validate>
<Validate>terminalMake = sqlMake</Validate>
<Validate>terminalModel = sqlModel</Validate>
<SqlTest><![CDATA[select count (*) as 'sqlFailures' from event_e_lte_hfa_err_raw as rawview where DATETIME_ID >= '2015-01-28 00:00' and DATETIME_ID < '2015-02-04 00:00' and rawview.EVENT_ID = {eventId} and rawview.TAC = {3.TAC}]]></SqlTest>
<Validate>3.failures = sqlFailures</Validate>
</RepeatValidation>
<Validate>3.failures = count{eventTime}</Validate>
</TestCase>

</TestSuite>