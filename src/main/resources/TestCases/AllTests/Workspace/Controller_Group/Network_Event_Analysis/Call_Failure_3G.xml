<?xml version="1.0" encoding="UTF-8"?>
<TestSuite>
<TestCase id="1">
<Direction> Launch -> Controller Group -> Network Event Analysis -> Call Failure (3G) </Direction>
<Url><![CDATA[NETWORK/WCDMA_CFA_NETWORK_EVENT_ANALYSIS/NODE?dateFrom={date}&dateTo={date}&timeFrom={time}&timeTo={time}&type=BSC&groupname={-master-RANCFAControllerGroup}&display=grid&tzOffset=%2B0000]]></Url>
<CSVUrl><![CDATA[EniqEventsCSV.jsp?type=BSC&groupname={-master-RANCFAControllerGroup}&display=grid&tzOffset=%2B0100&dataTimeFrom={datetime}&dataTimeTo={datetime}&userName=admin&url=NETWORK/WCDMA_CFA_NETWORK_EVENT_ANALYSIS/NODE&maxRows=0]]></CSVUrl>
<IgnoredInCsv>5:eventId</IgnoredInCsv>
<JSONVariables>1:groupId,3:failures,5:eventId</JSONVariables>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[SELECT SUM(CS_ERR_CNT+PS_ERR_CNT+MULTI_ERR_CNT) as 'sqlFailures' FROM EVENT_E_RAN_CFA_ERR_RAW as RAW, GROUP_TYPE_E_RAT_VEND_HIER3 as GRP WHERE DATETIME_ID >= '2015-20-03 00:00' and DATETIME_ID < '2015-02-04 00:00' AND GRP.HIER3_ID = RAW.HIER3_ID and GRP.GROUP_NAME = '{groupId}' AND RAW.event_id = {eventId}]]></SqlTest>
<Validate>failures = sqlFailures</Validate>
</RepeatValidation>
<Validate>sort{failures} = desc</Validate>
<RepeatDrillDown instruction="all">2,3</RepeatDrillDown>
<PassToDrillDown id="2">groupId,failures,eventId</PassToDrillDown>
<PassToDrillDown id="3">groupId,failures,eventId</PassToDrillDown>
</TestCase>

<TestCase id="2">
<Precondition>1.failures >0</Precondition>
<!-- Since we have drill on two failures i.e 438 for Call Drop and 456 for Call Set up,Precondition has been applied to split them according to eventId -->
<Precondition>1.eventId = 438</Precondition>
<Direction> Drill on failures </Direction>
<Url><![CDATA[NETWORK/WCDMA_CALL_FAILURE_DETAILED_EVENT_ANALYSIS/NODE?dateFrom=03022015&dateTo=04022015&timeFrom=0000&timeTo=0000&display=grid&tzOffset=%2B0000&maxRows=30&eventID={1.eventId}&groupname={1.groupId}&type=BSC]]></Url>
<CSVUrl><![CDATA[EniqEventsCSV.jsp?display=grid&tzOffset=%2B0100&eventID={1.eventId}&groupname={1.groupId}&type=BSC&dataTimeFrom={datetime}&dataTimeTo={datetime}&userName=admin&url=NETWORK/WCDMA_CALL_FAILURE_DETAILED_EVENT_ANALYSIS/NODE&maxRows=0]]></CSVUrl>
<IgnoredInCsv>17:hierId,18:eventId,19:hierCellID,52:groupId</IgnoredInCsv>
<JSONVariables>1:eventTime,2:IMSI,3:TAC,4:terminalMake,5:terminalModel,18:eventId,44:csErr,45:psErr,46:multiErr</JSONVariables>
<Validate>1.failures = sum{csErr}+sum{psErr}+sum{multiErr}</Validate>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select isnull(CAST(rawview.imsi as varchar),' ') as 'sqlIMSI' ,isnull(CAST(rawview.tac as varchar),' ') as 'sqlTAC',
 case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown')
 WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' ,
 case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown')
 WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel'
 from(select imsi,TAC from EVENT_E_RAN_CFA_ERR_RAW where imsi = {IMSI}
 and EVENT_TIME = '{eventTime}' and DATETIME_ID >= '2015-03-19 12:02' and DATETIME_ID < '2015-03-19 12:32'
 and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC]]></SqlTest>
<Validate>IMSI=sqlIMSI,TAC=sqlTAC,terminalMake=sqlMake,terminalModel=sqlModel</Validate>
</RepeatValidation>
<RepeatDrillDown instruction="all">4</RepeatDrillDown>
<PassToDrillDown id="4">TAC,terminalMake,terminalModel,1.eventId</PassToDrillDown>
</TestCase>

<TestCase id="3">
<Precondition>1.failures >0</Precondition>
<Precondition>1.eventId = 456</Precondition>
<Direction> Drill on failures </Direction>
<Url><![CDATA[NETWORK/WCDMA_CALL_FAILURE_DETAILED_EVENT_ANALYSIS/NODE?dateFrom={date}&dateTo={date}&timeFrom={time}&timeTo={time}&display=grid&tzOffset=%2B0000&maxRows=30&eventID={1.eventId}&groupname={1.groupId}&type=BSC]]></Url>
<CSVUrl><![CDATA[EniqEventsCSV.jsp?display=grid&tzOffset=%2B0100&eventID={1.eventId}&groupname={1.groupId}&type=BSC&dataTimeFrom={datetime}&dataTimeTo={datetime}&userName=admin&url=NETWORK/WCDMA_CALL_FAILURE_DETAILED_EVENT_ANALYSIS/NODE&maxRows=0]]></CSVUrl>
<IgnoredInCsv>17:hierId,18:eventId,19:hierCellID,21:ECNO_DBM,22:ULINT_DBM,23:RSCP_DBM,27:RSCP_DBM,28:RSCP_DBM,29:RSCP_DBM,30:ECNO_DBM,31:ECNO_DBM,32:ECNO_DBM,33:ULINT_DBM,34:ULINT_DBM,35:ULINT_DBM,36:SCRAMBLING_CODE_CELL_1,37:SCRAMBLING_CODE_CELL_2,38:SCRAMBLING_CODE_CELL_3,39:SCRAMBLING_CODE_CELL_4,40:GBR_UL,41:GBR_DL,43:DATA_IN_DL_RLC_BUFFERS,52:groupId</IgnoredInCsv>
<JSONVariables>1:eventTime,2:IMSI,3:TAC,4:terminalMake,5:terminalModel,44:csErr,45:psErr,46:multiErr</JSONVariables>
<Validate>1.failures = sum{csErr}+sum{psErr}+sum{multiErr}</Validate>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select isnull(CAST(rawview.imsi as varchar),' ') as 'sqlIMSI' ,isnull(CAST(rawview.tac as varchar),' ') as 'sqlTAC',
 case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Unknown')
 WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.VENDOR_NAME, 'Manufacturer Invalid') else ' ' end as 'sqlMake' ,
 case when (rawview.TAC IS NOT NULL AND rawview.TAC <> 0) then isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Unknown')
 WHEN (rawview.TAC = 0) THEN isnull(DIM_E_SGEH_TAC.MARKETING_NAME, 'Model Invalid') else ' ' end as 'sqlModel'
 from(select imsi,TAC from EVENT_E_RAN_CFA_ERR_RAW where imsi = {IMSI}
 and EVENT_TIME = '{eventTime}' and DATETIME_ID >= '2015-03-19 12:02' and DATETIME_ID < '2015-03-19 12:32'
 and ISNULL(TAC,-1) not in (select TAC from dc.GROUP_TYPE_E_TAC where GROUP_NAME = 'EXCLUSIVE_TAC')) as rawview, DIM_E_SGEH_TAC where rawview.TAC *= DIM_E_SGEH_TAC.TAC]]></SqlTest>
<Validate>IMSI=sqlIMSI,TAC=sqlTAC,terminalMake=sqlMake,terminalModel=sqlModel</Validate>
</RepeatValidation>
<RepeatDrillDown instruction="all">5</RepeatDrillDown>
<PassToDrillDown id="5">TAC,terminalMake,terminalModel,1.eventId</PassToDrillDown>
</TestCase>

<TestCase id="4">
<Precondition>2.TAC != EMPTY</Precondition>
<Direction> Drill on TAC </Direction>
<Url><![CDATA[TERMINAL/WCDMA/CALL_FAILURE_EVENT_ANALYSIS/TERMINAL/SUMMARY?dateFrom={date}&dateTo={date}&timeFrom={time}&timeTo={time}&display=grid&tzOffset=%2B0100&maxRows=500&tac={2.TAC}&type=TAC]]></Url>
<CSVUrl><![CDATA[EniqEventsCSV.jsp?display=grid&tzOffset=%2B0100&tac={2.TAC}&type=TAC&dataTimeFrom={datetime}&dataTimeTo={datetime}&userName=admin&url=TERMINAL/WCDMA/CALL_FAILURE_EVENT_ANALYSIS/TERMINAL/SUMMARY&maxRows=0]]></CSVUrl>
<JSONVariables>1:manufacturer,2:model,4:failures,7:eventId,8:TAC</JSONVariables>
<Validate>2.TAC=TAC</Validate>
<Validate>2.terminalMake=manufacturer</Validate>
<Validate>2.terminalModel=model</Validate>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select count(*) as 'sqlFailures' from event_e_ran_cfa_err_raw where DATETIME_ID >= '2015-08-18 12:00' and DATETIME_ID < '2015-08-18 13:00' AND TAC = {TAC} AND EVENT_ID = {eventId}]]></SqlTest>
<Validate>failures=sqlFailures</Validate>
</RepeatValidation>
</TestCase>

<TestCase id="5">
<Precondition>3.TAC != EMPTY</Precondition>
<Direction> Drill on TAC </Direction>
<Url><![CDATA[TERMINAL/WCDMA/CALL_FAILURE_EVENT_ANALYSIS/TERMINAL/SUMMARY?dateFrom={date}&dateTo={date}&timeFrom={time}&timeTo={time}&display=grid&tzOffset=%2B0100&maxRows=500&tac={3.TAC}&type=TAC]]></Url>
<CSVUrl><![CDATA[EniqEventsCSV.jsp?display=grid&tzOffset=%2B0100&tac={3.TAC}&type=TAC&dataTimeFrom={datetime}&dataTimeTo={datetime}&userName=admin&url=TERMINAL/WCDMA/CALL_FAILURE_EVENT_ANALYSIS/TERMINAL/SUMMARY&maxRows=0]]></CSVUrl>
<JSONVariables>1:manufacturer,2:model,4:failures,7:eventId,8:TAC</JSONVariables>
<Validate>3.TAC=TAC</Validate>
<Validate>3.terminalMake=manufacturer</Validate>
<Validate>3.terminalModel=model</Validate>
<RepeatValidation instruction="all">
<SqlTest><![CDATA[select count(*) as 'sqlFailures' from event_e_ran_cfa_err_raw where DATETIME_ID >= '2015-08-18 12:00' and DATETIME_ID < '2015-08-18 13:00' AND TAC = {TAC} AND EVENT_ID = {eventId}]]></SqlTest>
<Validate>failures=sqlFailures</Validate>
</RepeatValidation>
</TestCase>

</TestSuite>